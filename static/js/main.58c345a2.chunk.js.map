{"version":3,"sources":["components/SingleCard/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAsBeA,EApBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAKjD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKG,IAAKL,EAAKK,IAAKD,UAAU,QAAQE,IAAI,eAC1C,qBACED,IAAI,iBACJD,UAAU,OACVE,IAAI,YACJC,QAZY,WACbJ,GAAUF,EAAaD,YCA1BQ,EAAa,CACjB,CAAEH,IAAK,qBAAsBI,SAAS,GACtC,CAAEJ,IAAK,qBAAsBI,SAAS,GACtC,CAAEJ,IAAK,mBAAoBI,SAAS,GACpC,CAAEJ,IAAK,qBAAsBI,SAAS,GACtC,CAAEJ,IAAK,qBAAsBI,SAAS,GACtC,CAAEJ,IAAK,oBAAqBI,SAAS,IAqFxBC,MAlFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WAEnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cAEtCV,EAAS,GACTF,EAASS,IAILrB,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAuChD,OA5BA4B,qBAAU,WACRP,MACC,IAGHO,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GAERJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAACgB,GACR,OAAOA,EAAUH,KAAI,SAAC1B,GACpB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAOf8B,YAAW,WA7Bbb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACgB,GAAD,OAAeA,EAAY,KACpCX,GAAY,KA4BP,QAEJ,CAACJ,EAAWE,IAGb,sBAAKd,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CACEC,aAAcA,EAEdD,KAAMA,EACNE,QAASF,GAAQgB,GAAahB,IAASkB,GAAalB,EAAKS,QACzDN,SAAUA,GAHLH,EAAK2B,SAOhB,wCAAWb,SCrFjBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.58c345a2.chunk.js","sourcesContent":["import \"./SingleCard.css\";\n\nconst SingleCard = ({ card, handleChoice, flipped, disabled }) => {\n  const handleClick = () => {\n    if (!disabled) handleChoice(card);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img src={card.src} className=\"front\" alt=\"card front\" />\n        <img\n          src=\"/img/cover.png\"\n          className=\"back\"\n          alt=\"card back\"\n          onClick={handleClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleCard;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SingleCard from \"./components/SingleCard/SingleCard\";\n\nconst cardImages = [\n  { src: \"./img/helmet-1.png\", matched: false },\n  { src: \"./img/potion-1.png\", matched: false },\n  { src: \"./img/ring-1.png\", matched: false },\n  { src: \"./img/scroll-1.png\", matched: false },\n  { src: \"./img/shield-1.png\", matched: false },\n  { src: \"./img/sword-1.png\", matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle cards\n  const shuffleCards = () => {\n    // totally we need 12 card for matching one by one\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setTurns(0);\n    setCards(shuffledCards);\n  };\n\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // start a new game auto\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  // handle game\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n      } else {\n      }\n\n      setTimeout(() => {\n        resetTurn();\n      }, 1000);\n    }\n  }, [choiceOne, choiceTwo]);\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            handleChoice={handleChoice}\n            key={card.id}\n            card={card}\n            flipped={card == choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}